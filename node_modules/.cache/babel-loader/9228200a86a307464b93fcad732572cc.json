{"ast":null,"code":"/**\n * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"npm\" -o ./npm/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('lodash._basecreate'),\n    isObject = require('lodash.isobject'),\n    setBindData = require('lodash._setbinddata');\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\n\n\nvar arrayRef = [];\n/** Native method shortcuts */\n\nvar push = arrayRef.push;\n/**\n * The base implementation of `_.bind` that creates the bound function and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new bound function.\n */\n\nfunction baseBind(bindData) {\n  var func = bindData[0],\n      partialArgs = bindData[2],\n      thisArg = bindData[4];\n\n  function bound() {\n    // `Function#bind` spec\n    // http://es5.github.io/#x15.3.4.5\n    if (partialArgs) {\n      var args = partialArgs.slice();\n      push.apply(args, arguments);\n    } // mimic the constructor's `return` behavior\n    // http://es5.github.io/#x13.2.2\n\n\n    if (this instanceof bound) {\n      // ensure `new bound` is an instance of `func`\n      var thisBinding = baseCreate(func.prototype),\n          result = func.apply(thisBinding, args || arguments);\n      return isObject(result) ? result : thisBinding;\n    }\n\n    return func.apply(thisArg, args || arguments);\n  }\n\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseBind;","map":{"version":3,"names":["baseCreate","require","isObject","setBindData","arrayRef","push","baseBind","bindData","func","partialArgs","thisArg","bound","args","slice","apply","arguments","thisBinding","prototype","result","module","exports"],"sources":["/home/gaizka/Documentos/workspaces/mensuales/conversor/node_modules/lodash._basebind/index.js"],"sourcesContent":["/**\n * Lo-Dash 2.3.0 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"npm\" -o ./npm/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\nvar baseCreate = require('lodash._basecreate'),\n    isObject = require('lodash.isobject'),\n    setBindData = require('lodash._setbinddata');\n\n/**\n * Used for `Array` method references.\n *\n * Normally `Array.prototype` would suffice, however, using an array literal\n * avoids issues in Narwhal.\n */\nvar arrayRef = [];\n\n/** Native method shortcuts */\nvar push = arrayRef.push;\n\n/**\n * The base implementation of `_.bind` that creates the bound function and\n * sets its meta data.\n *\n * @private\n * @param {Array} bindData The bind data array.\n * @returns {Function} Returns the new bound function.\n */\nfunction baseBind(bindData) {\n  var func = bindData[0],\n      partialArgs = bindData[2],\n      thisArg = bindData[4];\n\n  function bound() {\n    // `Function#bind` spec\n    // http://es5.github.io/#x15.3.4.5\n    if (partialArgs) {\n      var args = partialArgs.slice();\n      push.apply(args, arguments);\n    }\n    // mimic the constructor's `return` behavior\n    // http://es5.github.io/#x13.2.2\n    if (this instanceof bound) {\n      // ensure `new bound` is an instance of `func`\n      var thisBinding = baseCreate(func.prototype),\n          result = func.apply(thisBinding, args || arguments);\n      return isObject(result) ? result : thisBinding;\n    }\n    return func.apply(thisArg, args || arguments);\n  }\n  setBindData(bound, bindData);\n  return bound;\n}\n\nmodule.exports = baseBind;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAAxB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CADtB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,qBAAD,CAFzB;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,QAAQ,GAAG,EAAf;AAEA;;AACA,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;EAC1B,IAAIC,IAAI,GAAGD,QAAQ,CAAC,CAAD,CAAnB;EAAA,IACIE,WAAW,GAAGF,QAAQ,CAAC,CAAD,CAD1B;EAAA,IAEIG,OAAO,GAAGH,QAAQ,CAAC,CAAD,CAFtB;;EAIA,SAASI,KAAT,GAAiB;IACf;IACA;IACA,IAAIF,WAAJ,EAAiB;MACf,IAAIG,IAAI,GAAGH,WAAW,CAACI,KAAZ,EAAX;MACAR,IAAI,CAACS,KAAL,CAAWF,IAAX,EAAiBG,SAAjB;IACD,CANc,CAOf;IACA;;;IACA,IAAI,gBAAgBJ,KAApB,EAA2B;MACzB;MACA,IAAIK,WAAW,GAAGhB,UAAU,CAACQ,IAAI,CAACS,SAAN,CAA5B;MAAA,IACIC,MAAM,GAAGV,IAAI,CAACM,KAAL,CAAWE,WAAX,EAAwBJ,IAAI,IAAIG,SAAhC,CADb;MAEA,OAAOb,QAAQ,CAACgB,MAAD,CAAR,GAAmBA,MAAnB,GAA4BF,WAAnC;IACD;;IACD,OAAOR,IAAI,CAACM,KAAL,CAAWJ,OAAX,EAAoBE,IAAI,IAAIG,SAA5B,CAAP;EACD;;EACDZ,WAAW,CAACQ,KAAD,EAAQJ,QAAR,CAAX;EACA,OAAOI,KAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBd,QAAjB"},"metadata":{},"sourceType":"script"}